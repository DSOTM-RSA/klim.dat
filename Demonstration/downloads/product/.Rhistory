annRow = iris["Species"], annColors = "Set2",
distfun = "pearson", treeheight=c(100, 50),
fontsize=13, cexCol=.6)
aheatmap(m, color = "-RdBu:50", scale = "col", breaks = 0, treeheight=c(100, 50),
fontsize=13, cexCol=.6)
library(dplyr)
library(plyr)
library(plyr)
a1 <- data.frame(a = 1:5, b=letters[1:5])
a2 <- data.frame(a = 1:3, b=letters[1:3])
View(a1)
View(a2)
View(a1)
with(join.keys(a1,a2),which(x %in% y))
join.keys(a1,a2)
??join.keys
library(ggplot2)
library(RColorBrewer)
drug_name <- c("a", "a", "b", "b", "b", "c", "d", "e", "e", "e", "e", "e", "e",
"f", "f", "g", "g", "g", "g", "h", "i", "j", "j", "j", "k", "k",
"k", "k", "k", "k", "l", "l", "m", "m", "m", "n", "o")
df <- data.frame(drug_name)
#get the frequency of each drug name
df_count <- count(df, 'drug_name')
#add a column that specifies the drug class
df_count$drug_class <- vector(mode='character', length=nrow(df_count))
df_count$drug_class[df_count$drug_name %in% c("a", "c", "e", "f")] <- 'class1'
df_count$drug_class[df_count$drug_name %in% c("b", "o")] <- 'class2'
df_count$drug_class[df_count$drug_name %in% c("d", "h", "i")] <- 'class3'
df_count$drug_class[df_count$drug_name %in% c("g", "j", "k", "l", "m", "n")] <- 'class4'
#expand color palette (from http://novyden.blogspot.com/2013/09/how-to-expand-color-palette-with-ggplot.html)
colorCount = length(unique(df_count$drug_name))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
test_plot <- ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) + geom_bar(stat="identity") + scale_fill_manual(values=getPalette(colorCount))
test_plot
View(df_count)
library(dplyr)
df_count = df_count %>% group_by(drug_class) %>%
mutate(cum.freq = cumsum(freq) - 0.5*freq)
ncol = table(df_count$drug_class)
pal = mapply(function(x,y) brewer.pal(x,y), ncol, c("BrBG","OrRd","YlGn","Set2"))
pal[[2]] = pal[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
pal = unname(unlist(pal))
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal) +
guides(fill=FALSE)
pal = mapply(function(x,y) brewer.pal(x,y), ncol, c("OrRd","OrRd","OrRd","OrRd"))
pal[[2]] = pal[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
pal = unname(unlist(pal))
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal) +
guides(fill=FALSE)
pal = mapply(function(x,y) brewer.pal(x,y), ncol, c("BrBG","BrBG","BrBG","BrBG"))
pal[[2]] = pal[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
pal = unname(unlist(pal))
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal) +
guides(fill=FALSE)
pal = mapply(function(x,y) brewer.pal(x,y), ncol, c("BrBG","OrRd","YlGn","Set2"))
pal[[2]] = pal[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
pal = unname(unlist(pal))
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal) +
guides(fill=FALSE)
pal = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal[[2]] = pal[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
pal = unname(unlist(pal))
pal
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal) +
guides(fill=FALSE)
lum = seq(100, 50, length.out=4)    # Vary the luminance for each bar
shift = seq(20, 60, length.out=4)  # Shift the hues for each bar
pal2 = mapply(function(n, l, s) hcl(seq(0 + s, 360 + s, length.out=n+1)[1:n], 100, l),
ncol, lum, shift)
pal2 = unname(unlist(pal2))
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2) +
guides(fill=FALSE)
pal2
order(df_count,drug_class)
pal2-c
sort(df_count,drug_name)
sort(df_count)
sort(df_count$drug_class)
order(df_count,drug_class)
order(df_count,df$count$drug_class)
order(df_count$drug_class)
df_count[order(df_count$drug_class)]
df_count[order(df_count$drug_class),]
outerr<-df_count[order(df_count$drug_class),]
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2) +
guides(fill=FALSE)
outerr
View(outerr)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(pal2) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2[order(df_count$drug_class)]) +
guides(fill=FALSE)
pal = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal = unname(unlist(pal))
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal2[order(df_count$drug_class)]) +
guides(fill=FALSE)
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal[order(df_count$drug_class)]) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal[order(df_count$drug_class)]) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal[order(outerr$drug_class)]) +
guides(fill=FALSE)
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal[order(outerr$drug_class)]) +
guides(fill=FALSE)
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal) +
guides(fill=FALSE)
?scale_fill_manual
pal3<-pal[order(df_count$drug_class),]
pal3<-pal2[order(df_count$drug_class),]
df_count$other<-df_count$drug_name[order(df_count$drug_class),]
df_count$other<-df_count$[order(df_count$drug_class),]
other<-df_count$[order(df_count$drug_class),]
outerr<-df_count[order(df_count$drug_class),]
View(outerr)
outer<-pal2[order(df_count$drug_class),]
df_count$other<-pal2
outerr$other<-pal2
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
pal3 = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal3 = unname(unlist(pal3))
pal3
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
pal3
pal2
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
pal.trial = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal.trial[[2]] = pal.trial[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
pal.trial = unname(unlist(pal.trial))
pal.trial
df_count$colours<-pal.trial
View(df_count)
sorted<-pal.trial[order(df_count$drug_class),]
outerr$new<-pal.trial
ggplot(data = df_class, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill(values=outerr$new) +
guides(fill=FALSE)
ggplot(data = df_class, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=c(outerr$new)) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill(values=c(outerr$new)) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=c(outerr$new)) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=c(outerr$other)) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=pal.trial) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=colours) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=cum.freq) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=drug_name) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
outerr$othername <- outerr$drug_name
outerr$othername <- df_count$drug_name
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=othername) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$other) +
guides(fill=FALSE)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=othername) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
outerr.again<-df_count[order(df_count$drug_class),]
View(outerr.again)
pal.test = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal.test[[2]] = pal.test[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
pal.test = unname(unlist(pal.test))
df_count_sorted <- df_count[order(df_count$drug_class),]
df_count_sorted$labOrder <- df_count$drug_name
df_count$colours<-pal.test
View(df_count_sorted)
ggplot(data = outerr, aes(x=drug_class, y=freq, fill=othername) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=outerr$new) +
guides(fill=FALSE)
df_count_sorted$new<-pal.trial
ggplot(data = df_count_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=$df_count_sorted$new) +
guides(fill=FALSE)
ggplot(data = df_count_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=$df_count_sorted$new) +
guides(fill=FALSE)
ggplot(data = df_count_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=$df_count_sorted$new) +
guides(fill=FALSE))
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=df_count_sorted$labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_count_sorted$new) +
guides(fill=FALSE)
ggplot(data = df_count, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_count_sorted$new) +
guides(fill=FALSE)
ggplot(data = df_count_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_count_sorted$new) +
guides(fill=FALSE)
pal.test = mapply(function(x,y) brewer.pal(x,y), ncol, c("Set2","Set2","Set2","Set2"))
pal.test[[2]] = pal.test[[2]][1:2]
pal.test = unname(unlist(pal.test))
pal.test
df_sorted <- df_count[order(df_count$drug_class),]
View(df_sorted)
df_sorted$labOrder <- df_count$drug_name
df_sorted$colours<-pal.test
ggplot(data = df_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_count_sorted$colours) +
guides(fill=FALSE)
ggplot(data = df_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq), colour="grey20") +
scale_fill_manual(values=df_sorted$colours) +
guides(fill=FALSE)
repeating.pal = mapply(function(x,y) brewer.pal(x,y), ncol,        c("Set2","Set2","Set2","Set2"))
Alter the plot routine, with `fill` = labOrder.
repeating.pal[[2]] = repeating.pal[[2]][1:2]  # We only need 2 colors but brewer.pal creates 3 minimum
repeating.pal = unname(unlist(repeating.pal))
df_count_sorted <- df_count[order(df_count$drug_class),]
df_count_sorted$labOrder <- df_count$drug_name
df_count$colours<-repeating.pal
ggplot(data = df_sorted, aes(x=drug_class, y=freq, fill=labOrder) ) +
geom_bar(stat="identity", colour="black", lwd=0.2) +
geom_text(aes(label=paste0(drug_name,": ", freq), y=cum.freq),     colour="grey20") +
scale_fill_manual(values=df_sorted$colours) +
guides(fill=FALSE)
install.packages(c("htmltools", "shinyjs"))
install.packages(c("BiodiversityR", "car", "effects", "Rcpp", "readxl", "shiny", "shinyjs", "sjPlot"))
setwd("~/Documents/GitArchive/Studio/Shiny Apps/shine2")
shiny::runApp()
install.packages(c("Hmisc", "lubridate", "Rcmdr", "RcmdrMisc", "sjmisc"))
setwd("~/Documents/CDC/Demonstration/downloads/product")
library(dplyr)
library(tidyr)
library(lattice)
# read in files
files <- dir(pattern = '*.txt', full.names = TRUE)
tables.of.data <- lapply(files, read.table,sep=";",header=TRUE,fill=TRUE)
fix.factors <-function(df) {
df[complete.cases(df),]
}
tables.of.data.trimmed<-lapply(tables.of.data,fix.factors)
tables.subset<-lapply(tables.of.data.trimmed,"[",1:6)
# remove un-needed datafiles
rm(tables.of.data.trimmed); rm(tables.of.data)
#plot(tables.subset[[1]]$NIEDERSCHLAGSHOEHE,type="l")
plot(tables.subset[[1]]$NIEDERSCHLAGSHOEHE,type="l")
data.df<-dplyr::bind_rows(tables.subset)
data.df.FF<-data.df[complete.cases(data.df),] # remove NA's (false factors and missing data)
data.df.FF$date.start <-as.character(data.df.FF$MESS_DATUM_BEGINN) %>% as.Date(., format='%Y%m%d')
data.df.FF$date.end <-as.character(data.df.FF$MESS_DATUM_ENDE) %>% as.Date(., format='%Y%m%d')
data.df.FF$station.id <- as.factor(data.df.FF$STATIONS_ID)
data.df.FF$precip <- data.df.FF$NIEDERSCHLAGSHOEHE
dt$precip[dt$precip==-999] <- NA
dt <- data.df.FF %>% select(date.start:precip)
View(dt)
str(dt)
summary(dt)
dt$precip[dt$precip==-999] <- NA
dt.ts <- as.ts(dt)
# remove un-needed datafiles
rm(data.df); rm(data.df.FF);
View(dt)
plot(dt$date.start[1:1827],dt$precip[1:1827])
plot(dt$date.start[1:1827],dt$precip[1:1827],type="line")
plot(dt$date.start[1:1827],dt$precip[1:1827],type="l")
plot(dt$date.start[1:1827],dt$precip[1:1827],type="h")
plot(dt$date.start[1:1827],dt$precip[1:1827],type="l")
xyplot(precip ~ date.start |station.id , data = dt, layout=c(3,1,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("p","smooth"),col.line="red",horizontal=TRUE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(3,1,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("p","smooth"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(3,1,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l","smooth"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(3,1,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("H","smooth"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(3,1,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("s","smooth"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(3,1,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("S","smooth"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(3,1,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l","smooth"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(3,1,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,2,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,2),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,2,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,2,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l"),col.line="red",horizontal=FALSE, aspect="xy",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,2,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Depth (cm)", xlab = "Counts",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,2,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Precipation (mm)", xlab = "Years",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,1,1),as.table=TRUE,
strip=TRUE, pch = 16, type=c("l"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Precipation (mm)", xlab = "Years",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,1,1),as.table=FALSE,
strip=TRUE, pch = 16, type=c("l"),col.line="red",horizontal=FALSE, aspect="free",
ylab = "Precipation (mm)", xlab = "Years",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,1,1),as.table=FALSE,
strip=TRUE, pch = 16, type=c("l"),col.line="black",horizontal=FALSE, aspect="free",
ylab = "Precipation (mm)", xlab = "Years",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,1,1),as.table=FALSE,
strip=TRUE, pch = 16, type=c("l"),col.line="blue",horizontal=FALSE, aspect="free",
ylab = "Precipation (mm)", xlab = "Years",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}) # regular labels, order is by default 'increasing'
write.dir <- "figs/"
i = 1
for (i in i:150){
png(filename = paste(write.dir,"F",i,".png",sep=""))
print(xyplot(precip ~ date.start |station.id , data = dt, layout=c(1,1,1),as.table=FALSE,
strip=TRUE, pch = 16, type=c("l"),col.line="blue",horizontal=FALSE, aspect="free",
ylab = "Precipation (mm)", xlab = "Years",
panel = function (x,y, ...){
panel.xyplot(x,y, ...)
}))
dev.off()
}
plot(dt.ts)
plot(dt.ts)
